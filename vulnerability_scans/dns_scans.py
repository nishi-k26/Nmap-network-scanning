#!/usr/bin/python3

import subprocess
from fpdf import FPDF

# List to store the scan results
scan_results = []

def perform_dns_scans(target, scan_results, report_filename="scan_report.pdf"):
    # Perform DNS vulnerability scans if port 53 is open.
    dns_scans = {
        "dns_bruteforce": ["nmap", "--script=dns-brute", "-p", "53", target],
        "dns_basic_info": ["nmap", "-sV", "--script=dns-info", "-p", "53", target],
        "dns_reverse_lookup": ["nmap", "-sV", "--script=dns-reverse-lookup", "-p", "53", target],
        "dns_srv_enum": ["nmap", "-sV", "--script=dns-srv-enum", "-p", "53", target],
        "dns_zone_transfer": ["nmap", "--script=dns-zone-transfer", "--script-args", "dns-zone-transfer.domain=example.com", "-p", "53", target],
        "dns_cache_snoop": ["nmap", "-sU", "-p", "53", "--script=dns-cache-snoop", target],
        "dns_check_zone": ["nmap", "-sn", "-Pn", "--script=dns-check-zone", "--script-args=dns-check-zone.domain=example.com", "-p", "53", target],
        "dns_recursion": ["nmap", "-Pn", "-sU", "-p", "53", "--script=dns-recursion", target]
    }

    print("Starting DNS vulnerability scans...")
    for scan_name, scan_command in dns_scans.items():
        print(f"Running {scan_name}...")
        result = subprocess.run(scan_command, capture_output=True, text=True)
        scan_results.append((scan_name, result.stdout + result.stderr))

    print("Completed DNS vulnerability scans.")

# After all scans are done, generate the PDF report
pdf = FPDF()
pdf.add_page()
pdf.set_font("Arial", size=12)
pdf.cell(200, 10, txt="Vulnerability Scans Report", ln=True, align='C')

for scan_name, output in scan_results:
    pdf.ln(10)
    pdf.cell(200, 10, txt=scan_name, ln=True)
    pdf.multi_cell(0, 10, txt=output)

pdf.output("dns_scan_report.pdf")