#!/usr/bin/python3

import subprocess
from fpdf import FPDF

# List to store the scan results
scan_results = []

def perform_smtp_scans(target, scan_results, report_filename="smtp_scan_report.pdf"):
    # Perform SMTP vulnerability scans if port 25, 465, or 587 is open.
    smtp_scans = {
        "smtp_version": ["nmap", "-sV", "--script=banner", "-p", "25", target],
        "smtp_open_relay": ["nmap", "--script=smtp-open-relay", "--script-args", "smtp-open-relay.domain=<domain>,smtp-open-relay.ip=<address>", "-p", "25,465,587", target],
        "smtp_enum_users": ["nmap", "--script=smtp-enum-users", "--script-args", "smtp-enum-users.methods={EXPN,...}", "-p", "25,465,587", target],
        "smtp_commands": ["nmap", "--script=smtp-commands", "--script-args", "smtp-commands.domain=<domain>", "-pT:25,465,587", target],
        "smtp_brute_force": ["nmap", "-p", "25", "--script=smtp-brute", target]
    }

    print("Starting SMTP vulnerability scans...")
    for scan_name, scan_command in smtp_scans.items():
        print(f"Running {scan_name}...")
        result = subprocess.run(scan_command, capture_output=True, text=True)
        scan_results.append((scan_name, result.stdout + result.stderr))
    print("Completed SMTP vulnerability scans.")

# After all scans are done, generate the PDF report
pdf = FPDF()
pdf.add_page()
pdf.set_font("Arial", size=12)
pdf.cell(200, 10, txt="SMTP Vulnerability Scans Report", ln=True, align='C')

for scan_name, output in scan_results:
    pdf.ln(10)
    pdf.cell(200, 10, txt=scan_name, ln=True)
    pdf.multi_cell(0, 10, txt=output)

pdf.output("smtp_scan_report.pdf")
print("Report saved as smtp_scan_report.pdf")
